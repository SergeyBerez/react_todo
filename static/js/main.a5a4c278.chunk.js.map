{"version":3,"sources":["components/pages/Users.js","components/pages/About.js","components/pages/modalEdit.js","components/pages/list.js","components/pages/UserTask.js","App.js","serviceWorker.js","index.js"],"names":["Main","users","this","props","liUsers","Object","keys","map","userId","i","className","key","to","parseInt","user_name","role","length","value","onChange","e","changeTitle","target","type","onClick","addUser","React","Component","About","style","backgroundColor","modalEdit","title","toggleModal","changeTitlebyModal","editTask","id_user","id_task","aria-hidden","list","state","modalShow","setState","time","bind","deleteTask","UserTask","tasks","name","forEach","task","history","match","params","id","push","item","valueTodo","valueUser","addTodoitems","disabled","App","useState","statetodos","setTodos","setValueUser","setValueTodor","useEffect","JSON","parse","localStorage","getItem","console","log","user","userTasks","setItem","stringify","newUser","Date","getTime","completed","date","toLocaleDateString","getHours","getMinutes","filter","exact","href","path","render","component","color","Boolean","window","location","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a5a4c278.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\n\r\nexport default class Main extends React.Component {\r\n  render() {\r\n   // console.log(\"================render ===== user\",this.props.users);\r\n\r\n    let users = this.props.users;\r\n    let liUsers = Object.keys(users).map((userId, i) => {\r\n     \r\n\r\n      return (\r\n        <li className=\"nav-item\" key={i}>\r\n          <NavLink className=\"nav-link\" to={\"/users/\" + parseInt(userId)}>\r\n            <i className=\"fas fa-user\"></i> {users[userId].user_name}\r\n          </NavLink>\r\n        </li>\r\n      );\r\n    });\r\n    //console.log(liUsers);\r\n    // let liTodos = this.props.todos.map((item, i) => {\r\n    //   console.log(item);\r\n    //   return (\r\n    //     <li className=\"nav-item\" key={i}>\r\n    //       <NavLink className=\"nav-link\" to={\"/users/\" + item.id_user}>\r\n    //         <i className=\"fas fa-user\"></i> {item.user_name}\r\n    //       </NavLink>\r\n    //     </li>\r\n    //   );\r\n    // });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"alert alert-primary\" role=\"alert\">\r\n          { Object.keys( this.props.users).length !== 0 ? (\r\n            <>\r\n              <i className=\"fas fa-users \"></i>\r\n              <span>all users</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <i className=\"fas fa-users \"></i> <span>not users add user</span>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"input-group \">\r\n          <input\r\n            value={this.props.value}\r\n            onChange={(e) => {\r\n              this.props.changeTitle(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              // value={props.value}\r\n              onClick={this.props.addUser}\r\n              className=\"btn btn-secondary\"\r\n              type=\"button\"\r\n            >\r\n              add User\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <ul className=\"list-group list-group-flush\">{liUsers}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nexport default class About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 style={{ backgroundColor: \"grey\" }}>\r\n          {\" \"}\r\n          приложение для создания пользователей и записей заметок  <br></br> версия 1.1.1\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function modalEdit({\r\n  title,\r\n  toggleModal,\r\n  changeTitlebyModal,\r\n  value,\r\n  editTask,\r\n  id_user,\r\n  id_task,\r\n}) {\r\n // console.log(\"=======render modal\");\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n            <button type=\"button\" className=\"close\" onClick={toggleModal}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <input\r\n              value={value}\r\n              onChange={(e) => {\r\n                changeTitlebyModal(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              onClick={toggleModal}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                editTask(id_user, id_task);\r\n              }}\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport Modal from \"./modalEdit\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class list extends Component {\r\n  state = {\r\n    modalShow: false,\r\n  };\r\n  toggleModal() {\r\n    this.setState({ modalShow: !this.state.modalShow });\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"======render list\", this.props);\r\n\r\n    return (\r\n      <li className=\"list-group-item  userTasksLi\">\r\n        <div className=\"\">\r\n          <i className=\"fas fa-thumbtack\"></i>\r\n          <span>\r\n            {this.props.title}&nbsp; {this.props.time}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          {this.state.modalShow ? (\r\n            <Modal\r\n              id_user={this.props.id_user}\r\n              id_task={this.props.id_task}\r\n              title={this.props.title}\r\n              value={this.props.value}\r\n              editTask={this.props.editTask}\r\n              changeTitlebyModal={this.props.changeTitlebyModal}\r\n              toggleModal={this.toggleModal.bind(this)}\r\n            />\r\n          ) : null}\r\n          <button\r\n            onClick={this.toggleModal.bind(this)}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-warning\"\r\n          >\r\n            <i className=\"fas fa-edit\"></i>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.deleteTask(this.props.id_user, this.props.id_task);\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger\"\r\n          >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n// export default function list({ nameTask, id }) {\r\n//   const [modal, showModal] = useState(true);\r\n//   function toggleModal() {\r\n//     showModal(!modal);\r\n//   }\r\n//   return (\r\n//     <li className=\"list-group-item  userTasksLi\">\r\n//       <div className=\"\">\r\n//         <i className=\"fas fa-thumbtack\"></i>\r\n//         <span>\r\n//           {nameTask} {id}\r\n//         </span>\r\n//       </div>\r\n//       <div>\r\n//         <Modal nameTask={nameTask} />\r\n\r\n//         <button\r\n//           toggleModal={toggleModal}\r\n//           type=\"button\"\r\n//           className=\"btn btn-outline-warning\"\r\n//         >\r\n//           <i className=\"fas fa-edit\"></i>\r\n//         </button>\r\n\r\n//         <button type=\"button\" className=\"btn btn-outline-danger\">\r\n//           <i className=\"fas fa-trash-alt\"></i>\r\n//         </button>\r\n//       </div>\r\n//     </li>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport List from \"./list\";\r\nexport default class UserTask extends React.Component {\r\n  state = {\r\n    tasks: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(\"============componentDidMount\", this.props.users);\r\n    // console.log(this.props.history.match.params.id);\r\n    // let tasks = [];\r\n    // Object.keys(this.props.users).forEach((userId) => {\r\n    //   let task = this.props.users[userId];\r\n    //   if (task.id_user === parseInt(this.props.history.match.params.id)) {\r\n    //     this.setState({ tasks });\r\n    //      tasks.push(task.tasks);\r\n    //      console.log(tasks);\r\n    //   }\r\n    // });\r\n    // let userTodo = this.props.todos.find((item, i) => {\r\n    //   return item.id_user === parseInt(this.props.history.match.params.id);\r\n    // });\r\n    // if (userTodo) {\r\n    //   this.setState({ userTodo });\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"==============render user tasks\", this.props.users);\r\n    \r\n\r\n    let tasks = [];\r\n    let name = \"\";\r\n    Object.keys(this.props.users).forEach((userId) => {\r\n      let task = this.props.users[userId];\r\n\r\n      if (task.id_user === parseInt(this.props.history.match.params.id)) {\r\n        name = task.user_name;\r\n        for (const i of task.tasks) {\r\n          tasks.push(i);\r\n        }\r\n      }\r\n    });\r\n\r\n    let task = tasks.map((item, i) => {\r\n   \r\n      return (\r\n        <List\r\n          key={i}\r\n          id_user={parseInt(this.props.history.match.params.id)}\r\n          id_task={item.id_task}\r\n          value={this.props.valueTodo}\r\n          title={item.title}\r\n          time={item.time}\r\n          editTask={this.props.editTask}\r\n          changeTitlebyModal={this.props.changeTitlebyModal}\r\n          deleteTask={this.props.deleteTask}\r\n\r\n          // showModal={item.showModal}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"alert alert-primary\" role=\"alert\">\r\n          <h1>{name}</h1>\r\n          {tasks.length !== 0 ? null : <span>no tasks add task</span>}\r\n        </div>\r\n\r\n        <div className=\"input-group col-lg-6\">\r\n          <input\r\n            value={this.props.valueUser}\r\n            onChange={(e) => {\r\n              this.props.changeTitle(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.addTodoitems(\r\n                  parseInt(this.props.history.match.params.id)\r\n                );\r\n              }}\r\n              disabled={Object.keys(this.props.users).length === 0}\r\n              className=\"btn btn-secondary\"\r\n              type=\"button\"\r\n            >\r\n              add task\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ul className=\"list-group list-group-flush\"> {task}</ul>\r\n          {Object.keys(this.props.users).length === 0 ? (\r\n            <p>добавьте user</p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Users from \"./components/pages/Users\";\r\nimport { useState, useEffect } from \"react\";\r\n//import TodoList from \"./components/TodoList\";\r\nimport About from \"./components/pages/About\";\r\nimport UserTask from \"./components/pages/UserTask\";\r\n\r\nimport \"./App.css\";\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  // const [state, setState] = useState({ isShow: true });\r\n\r\n  // const onLogin = () => {\r\n  //   let isShow = !state.isShow;\r\n  //   setState({ isShow });\r\n  // };\r\n\r\n  const [statetodos, setTodos] = useState({});\r\n  const [valueUser, setValueUser] = useState({ value: \"\" });\r\n  const [valueTodo, setValueTodor] = useState({ value: \"\" });\r\n  // useEffect(() => {\r\n  //   setTodos(store);\r\n  // });\r\n  useEffect(() => {\r\n    let users = JSON.parse(localStorage.getItem(\"users\")) || {};\r\n\r\n    setTodos({ ...users });\r\n  }, []);\r\n  const editTask = (id_user, id_task) => {\r\n    console.log(id_user, id_task);\r\n    let users = { ...statetodos };\r\n    let user = { ...users[id_user] };\r\n    let userTasks = [...users[id_user].tasks];\r\n    console.log(userTasks);\r\n\r\n    let tasks = userTasks.map((item) => {\r\n      if (item.id_task === id_task) {\r\n        item.title = valueTodo.value;\r\n      }\r\n      return item;\r\n    });\r\n    userTasks = tasks;\r\n    user.tasks = userTasks;\r\n    users[id_user] = user;\r\n\r\n    setTodos({ ...users });\r\n    localStorage.setItem(\"users\", JSON.stringify({ ...users }));\r\n    setValueTodor({ value: \"\" });\r\n\r\n    // let todos = [...statetodos.todos].map((user) => {\r\n    //   if (user.id_user === id_user) {\r\n    //     [...user.tasks].map((item) => {\r\n    //       if (item.id_task === id_task) {\r\n    //         item.title = statetodos.value1;\r\n    //       }\r\n    //       return item;\r\n    //     });\r\n    //   }\r\n    //   return user;\r\n    // });\r\n\r\n    // setTodos({ todos, value: \"\", value1: \"\" });\r\n  };\r\n  const addUser = () => {\r\n    let newUser = {\r\n      [`${new Date().getTime() + 1}`]: {\r\n        id_user: new Date().getTime() + 1,\r\n        user_name: valueUser.value,\r\n        completed: false,\r\n        tasks: [],\r\n      },\r\n    };\r\n\r\n    // users.push(newUser);\r\n    setTodos({ ...statetodos, ...newUser });\r\n    localStorage.setItem(\r\n      \"users\",\r\n      JSON.stringify({ ...statetodos, ...newUser })\r\n    );\r\n    setValueUser({ value: \"\" });\r\n  };\r\n  const addTodoitems = (id_user) => {\r\n    let users = { ...statetodos };\r\n    let user = { ...users[id_user] };\r\n    let userTasks = [...users[id_user].tasks];\r\n    let date = new Date();\r\n    userTasks.push({\r\n      id_task: new Date().getTime() + 1,\r\n      title: valueUser.value,\r\n      time: `${new Date().toLocaleDateString()} :${date.getHours()}:${date.getMinutes()}`,\r\n    });\r\n\r\n    user.tasks = userTasks;\r\n    users[id_user] = user;\r\n    setTodos({ ...users });\r\n    localStorage.setItem(\"users\", JSON.stringify({ ...users }));\r\n    setValueUser({ value: \"\" });\r\n\r\n    //let date = new Date();\r\n\r\n    // todos.map((user) => {\r\n    //   if (user.id_user === id_user) {\r\n    //     let newTodo = {\r\n    //       id_task: new Date().getTime() + 1,\r\n    //       title: statetodos.value,\r\n    //       time: `${new Date().toLocaleDateString()} :${date.getHours()}:${date.getMinutes()}`,\r\n    //       completed: false,\r\n    //     };\r\n    //     user.tasks.push(newTodo);\r\n    //   }\r\n    //   return user;\r\n    // });\r\n\r\n    // setTodos({ todos, value: \"\" });\r\n  };\r\n\r\n  // const changeChecked = (e, i) => {\r\n  //   let todos = [...statetodos.todos];\r\n  //   todos[i].completed = e.target.checked;\r\n\r\n  //   setTodos({ todos, value: statetodos.value });\r\n  // };\r\n  const changeTitle = (value) => {\r\n    //let arr = {...statetodos;}\r\n    //  setTodos({ todos: arr,});\r\n    setValueUser({ value });\r\n  };\r\n\r\n  const changeTitlebyModal = (value) => {\r\n    setValueTodor({ value });\r\n    // let users = {...statetodos.todos};\r\n    // setTodos({ todos: arr, value: \"\", value1: e });\r\n  };\r\n  // const onShowUserTask = (id) => {\r\n  //   let todos = [...statetodos.todos].map((user) => {\r\n  //     if (user.id === id) {\r\n  //       user.completed = !user.completed;\r\n  //     }\r\n  //     return user;\r\n  //   });\r\n\r\n  //   console.log(statetodos);\r\n  //   setTodos({ todos, value: statetodos.value });\r\n  // };\r\n  const deleteUser = (id) => {\r\n    // id++;\r\n    // console.log(id);\r\n    let todos = [...statetodos.todos];\r\n\r\n    todos.splice(id, 1);\r\n    // let todos = [...statetodos.todos].filter((items) => {\r\n    //   console.log(items.id);\r\n    //   return items.id !== id;\r\n    // });\r\n    setTodos({ todos, value: statetodos.value });\r\n  };\r\n  const deleteTask = (id_user, id_task) => {\r\n    let users = { ...statetodos };\r\n    let user = { ...users[id_user] };\r\n    let userTasks = [...users[id_user].tasks];\r\n\r\n    let tasks = userTasks.filter((task) => {\r\n      return task.id_task !== id_task;\r\n    });\r\n    user.tasks = tasks;\r\n    users[id_user] = user;\r\n    setTodos({ ...users });\r\n    localStorage.setItem(\"users\", JSON.stringify({ ...users }));\r\n    setValueUser({ value: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* {state ? <h2>вы вошли</h2> : <h2>авторизируйтесь</h2>} */}\r\n      {/* <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          onLogin();\r\n        }}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        добавьте пользователя\r\n      </button> */}\r\n      {true ? (\r\n        <nav className=\"nav justify-content-center\">\r\n          {/* <NavLink exact to=\"/\" className=\"nav-link\" href=\"#\">\r\n            Home\r\n          </NavLink> */}\r\n          <NavLink exact to=\"/users\" className=\"nav-link\" href=\"#\">\r\n            users\r\n          </NavLink>\r\n\r\n          {/* <NavLink to=\"/todolist\" className=\"nav-link\" href=\"#\">\r\n            TodoList\r\n          </NavLink> */}\r\n          <NavLink to=\"/about\" className=\"nav-link \" href=\"#\">\r\n            About\r\n          </NavLink>\r\n        </nav>\r\n      ) : null}\r\n\r\n      {/* {state ? <Route exact path=\"/\"></Route> : null} */}\r\n\r\n      <Switch>\r\n        {/* <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => {\r\n            return <h1>home page</h1>;\r\n          }}\r\n        /> */}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/users\"\r\n        \r\n          render={() => (\r\n            <Users\r\n              addUser={addUser}\r\n              changeTitle={changeTitle}\r\n              users={statetodos}\r\n              value={valueUser.value}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          path=\"/users/:id\"\r\n         \r\n          render={(e) => (\r\n            <UserTask\r\n              valueUser={valueUser.value}\r\n              valueTodo={valueTodo.value}\r\n              history={e}\r\n              users={statetodos}\r\n              addTodoitems={addTodoitems}\r\n              editTask={editTask}\r\n              changeTitle={changeTitle}\r\n              changeTitlebyModal={changeTitlebyModal}\r\n              deleteTask={deleteTask}\r\n            />\r\n          )}\r\n        />\r\n        <Route path=\"/about\" component={About}></Route>\r\n      \r\n        <Redirect to=\"/users\"></Redirect>\r\n        <Route\r\n          render={() => {\r\n            return <h1 style={{ color: \"red\" }}> 404 not found page...</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}