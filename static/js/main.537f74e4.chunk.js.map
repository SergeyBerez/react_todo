{"version":3,"sources":["Links/Drower.js","pages/Home.js","pages/Users/User.js","pages/Users/Users.js","components/modalEdit.js","pages/Users/list.js","pages/Users/UserPersonalTasks.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","links","title","link","MiniDrawer","classes","useTheme","React","useState","open","setOpen","className","root","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","exact","to","ListItemText","primary","marginTop","Home","margin","li","textAlign","User","users","deleteUser","console","log","user","i","parseInt","id_user","user_name","time","countTask","Button","startIcon","header","textField","Users","props","Alert","icon","severity","Object","keys","length","TextField","value","onChange","e","changeTitle","target","onKeyUp","keyHandle","id","label","placeholder","helperText","InputLabelProps","shrink","type","addUser","modalEdit","toggleModal","changeTitlebyModal","editTask","id_task","aria-hidden","list","state","modalShow","this","setState","bind","deleteTask","Component","UserPersonalTasks","tasks","RenderUserTask","find","history","match","params","task","valueTodo","time_task","role","undefined","valueUser","changeTitleUserTask","addTodoTaskUser","disabled","About","AlertTitle","App","USERS_LOCAL_STORAGE","JSON","parse","localStorage","getItem","stateUsers","setUsers","setValueUser","setValueTodor","useEffect","getUsersFromFairbase","a","fetch","response","ok","json","values","forEach","objFirestore","objLocalStorage","push","setItem","stringify","alert","status","postUsertoFirebase","userParam","firebase","database","ref","set","newUser","Date","now","toString","split","completed","count_task","keyCode","userTasks","item","date","getTime","toLocaleDateString","getHours","getMinutes","idUser","splice","idTask","arrUsers","filter","pos","indexOf","Container","maxWidth","path","component","render","style","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.537f74e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\"; \r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport PeopleAltTwoToneIcon from \"@material-ui/icons/PeopleAltTwoTone\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n const links = [\r\n    {\r\n      title: \"home\",\r\n      link: \"/react_todo\",\r\n     \r\n    },\r\n    {\r\n      title: \"users\",\r\n      link: \"/users\",\r\n    },\r\n    {\r\n      title: \"about\",\r\n      link: \"/about\",\r\n    },\r\n  ];\r\n\r\nconst MiniDrawer = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Menu\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {links.map((text, index) => (\r\n            <ListItem button key={index}>\r\n              <ListItemIcon>\r\n                <NavLink exact to={text.link} className={classes.link}>\r\n                  <LinkIcon />\r\n                </NavLink>\r\n              </ListItemIcon>\r\n              <ListItemText primary={text.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniDrawer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { marginTop: 70 },\r\n}));\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  return <h1 className={classes.root}>home page</h1>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PersonOutlineTwoToneIcon from \"@material-ui/icons/PersonOutlineTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: 8,\r\n  },\r\n  li: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction User({ users, deleteUser }) {\r\n  const classes = useStyles();\r\n  console.log(users);\r\n  return users.map((user, i) => {\r\n    return (\r\n      <li className={classes.li} key={i}>\r\n        <ListItem button className={classes.li}>\r\n          <NavLink className=\"nav-link\" to={\"/users/\" + parseInt(user.id_user)}>\r\n            <span>{i + 1}</span> &nbsp;\r\n            <PersonOutlineTwoToneIcon />\r\n            <ListItemText primary={user.user_name} />\r\n            <ListItemText primary={user.time} />\r\n            <span> you have &nbsp;{user.countTask} tasks</span>\r\n          </NavLink>\r\n        </ListItem>\r\n\r\n        {/* <div>\r\n            {\" \"}\r\n            <i className=\"fas fa-user i\"></i>\r\n            <span>{user.user_name}</span>()\r\n          </div> */}\r\n\r\n        {/* <span>{user.time}</span>\r\n          <span> you have &nbsp;{user.countTask} tasks</span> */}\r\n\r\n        <Button\r\n          onClick={() => {\r\n            deleteUser(i);\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n        {/* <button\r\n          onClick={() => {\r\n            deleteUser(i);\r\n          }}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger\"\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </button> */}\r\n      </li>\r\n    );\r\n  });\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport User from \"./User\";\r\nimport PeopleAltTwoToneIcon from \"@material-ui/icons/PeopleAltTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  header: {\r\n    marginTop: 70,\r\n  },\r\n  textField: {\r\n    width: \"85%\",\r\n    margin: 8,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction Users(props) {\r\n  const classes = useStyles();\r\n  // props.value.length > 2? <h3>\r\n  console.log(\"================render ===== users\", props);\r\n  return (\r\n    <div className={classes.header}>\r\n      <Alert icon={false} severity=\"info\" className={classes.root}>\r\n        <PeopleAltTwoToneIcon /> &nbsp;\r\n        {Object.keys(props.users).length !== 0 ? (\r\n          <>\r\n            &nbsp; <p>all users</p> &nbsp; &nbsp;\r\n            <span>{Object.keys(props.users).length}</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span>not users add user</span>\r\n          </>\r\n        )}\r\n      </Alert>\r\n\r\n      <div className={classes.root}>\r\n        <TextField\r\n          value={props.value}\r\n          onChange={(e) => {\r\n            props.changeTitle(e.target.value);\r\n          }}\r\n          onKeyUp={(e) => {\r\n            props.keyHandle(e);\r\n          }}\r\n          id=\"standard-full-width\"\r\n          label=\"Enter user\"\r\n          className={classes.textField}\r\n          placeholder=\"name user\"\r\n          helperText=\"\"\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          type=\"text\"\r\n        />\r\n        <Button\r\n          onClick={props.addUser}\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n        >\r\n          ADD USER\r\n        </Button>\r\n      </div>\r\n      <ul>\r\n        <User users={props.users} deleteUser={props.deleteUser}></User>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nexport default function modalEdit({\r\n  title,\r\n  toggleModal,\r\n  changeTitlebyModal,\r\n  value,\r\n  editTask,\r\n  id_user,\r\n  id_task,\r\n}) {\r\n // console.log(\"=======render modal\");\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n            <button type=\"button\" className=\"close\" onClick={toggleModal}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <input\r\n              value={value}\r\n              onChange={(e) => {\r\n                changeTitlebyModal(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              onClick={toggleModal}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                editTask(id_user, id_task);\r\n              }}\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Modal from \"../../components/modalEdit\";\r\nimport React, { Component } from \"react\";\r\nexport default class list extends Component {\r\n  state = {\r\n    modalShow: false,\r\n  };\r\n  toggleModal() {\r\n    this.setState({ modalShow: !this.state.modalShow });\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"======render list\", this.props);\r\n\r\n    return (\r\n      <li className=\"list-group-item  userTasksLi\">\r\n        <div className=\"list-item\">\r\n          <i className=\"fas fa-thumbtack\"></i>\r\n          <span>{this.props.title}</span>\r\n        </div>\r\n        <div className=\"list-item\">\r\n          <span>{this.props.time}</span>\r\n        </div>\r\n        <div className=\"list-item\">\r\n          <button\r\n            onClick={this.toggleModal.bind(this)}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-warning\"\r\n          >\r\n            <i className=\"fas fa-edit\"></i>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.deleteTask(\r\n                this.props.id_user,\r\n                this.props.id_task,\r\n                this.props.id\r\n              );\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger\"\r\n          >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </button>\r\n          {this.state.modalShow ? (\r\n            <Modal\r\n              id_user={this.props.id_user}\r\n              id_task={this.props.id_task}\r\n              title={this.props.title}\r\n              value={this.props.value}\r\n              editTask={this.props.editTask}\r\n              changeTitlebyModal={this.props.changeTitlebyModal}\r\n              toggleModal={this.toggleModal.bind(this)}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n// export default function list({ nameTask, id }) {\r\n//   const [modal, showModal] = useState(true);\r\n//   function toggleModal() {\r\n//     showModal(!modal);\r\n//   }\r\n//   return (\r\n//     <li className=\"list-group-item  userTasksLi\">\r\n//       <div className=\"\">\r\n//         <i className=\"fas fa-thumbtack\"></i>\r\n//         <span>\r\n//           {nameTask} {id}\r\n//         </span>\r\n//       </div>\r\n//       <div>\r\n//         <Modal nameTask={nameTask} />\r\n\r\n//         <button\r\n//           toggleModal={toggleModal}\r\n//           type=\"button\"\r\n//           className=\"btn btn-outline-warning\"\r\n//         >\r\n//           <i className=\"fas fa-edit\"></i>\r\n//         </button>\r\n\r\n//         <button type=\"button\" className=\"btn btn-outline-danger\">\r\n//           <i className=\"fas fa-trash-alt\"></i>\r\n//         </button>\r\n//       </div>\r\n//     </li>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport List from \"./list\";\r\nexport default class UserPersonalTasks extends React.Component {\r\n  state = {\r\n    tasks: [],\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    console.log(\"==============UserPersonalTasks render user tasks\");\r\n    let RenderUserTask;\r\n    let user;\r\n    if (Object.keys(this.props.users).length) {\r\n      user = this.props.users.find((user) => {\r\n        return user.id_user === parseInt(this.props.history.match.params.id);\r\n      });\r\n\r\n      RenderUserTask = user.tasks.map((task, i) => {\r\n        return (\r\n          <List\r\n            key={i}\r\n            id={i}\r\n            id_user={parseInt(this.props.history.match.params.id)}\r\n            id_task={task.id_task}\r\n            value={this.props.valueTodo}\r\n            title={task.title}\r\n            time={task.time_task}\r\n            editTask={this.props.editTask}\r\n            changeTitlebyModal={this.props.changeTitlebyModal}\r\n            deleteTask={this.props.deleteTask}\r\n\r\n            // showModal={item.showModal}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"alert alert-primary\" role=\"alert\">\r\n          {RenderUserTask === undefined ? (\r\n            <h1>at firs add user</h1>\r\n          ) : (\r\n            <>\r\n              <h1>{user.user_name}</h1>\r\n\r\n              <p>add tasks {user.tasks.length}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"input-group col-lg-6\">\r\n          <input\r\n            value={this.props.valueUser}\r\n            onKeyUp={(e) => {\r\n              this.props.keyHandle(\r\n                e,\r\n                parseInt(this.props.history.match.params.id),\r\n                user.tasks.length\r\n              );\r\n            }}\r\n            onChange={(e) => {\r\n              this.props.changeTitleUserTask(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.addTodoTaskUser(\r\n                  parseInt(this.props.history.match.params.id),\r\n                  user.tasks.length\r\n                );\r\n              }}\r\n              disabled={Object.keys(this.props.users).length === 0}\r\n              className=\"btn btn-secondary\"\r\n              type=\"button\"\r\n            >\r\n              add task\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ul className=\"list-group list-group-flush\">{RenderUserTask} </ul>\r\n          {/* {user.tasks.length === 0 ? <p>добавьте user</p> : null} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { marginTop: 70 },\r\n}));\r\nexport default function About(params) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity=\"info\">\r\n        <AlertTitle></AlertTitle>\r\n        приложение для создания пользователей и записей заметок &nbsp; &nbsp;\r\n        <strong>версия &nbsp;1.1.1</strong>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport \"./App.css\";\r\nimport MiniDrawer from \"./Links/Drower\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Users from \"./pages/Users/Users\";\r\nimport UserPersonalTasks from \"./pages/Users/UserPersonalTasks\";\r\nimport About from \"./pages/About\";\r\n\r\n\r\n\r\n// import Home from \"./components/pages/list\";\r\n\r\nfunction App() {\r\n  // const classes = useStyles();\r\n  // const [state, setState] = useState({ isShow: true });\r\n\r\n  // const onLogin = () => {\r\n  //   let isShow = !state.isShow;\r\n  //   setState({ isShow });\r\n  // };\r\n\r\n  const USERS_LOCAL_STORAGE = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\n  const [stateUsers, setUsers] = useState(USERS_LOCAL_STORAGE);\r\n  const [valueUser, setValueUser] = useState({ value: \"\" });\r\n  const [valueTodo, setValueTodor] = useState({ value: \"\" });\r\n  // useEffect(() => {\r\n  //   setUsers(store);\r\n  // });\r\n  useEffect(() => {\r\n    console.log(\"use effect\");\r\n    getUsersFromFairbase();\r\n  }, []);\r\n\r\n  const getUsersFromFairbase = async (params) => {\r\n    let response = await fetch(\r\n      \"https://react-quize-46f17.firebaseio.com/users.json\"\r\n    );\r\n    let users = [...stateUsers];\r\n    console.log(users);\r\n    // let newUsers = [];\r\n    if (response.ok) {\r\n      let json = await response.json();\r\n      console.log(\"getUsersFromFairbase\", json);\r\n     if (json) {\r\n      Object.values(json).forEach(objFirestore => {\r\n      users.find((objLocalStorage) => {\r\n        if(objLocalStorage.id!==objFirestore.id){\r\n          users.push(objFirestore)\r\n        }\r\n      })\r\n     });\r\n     }\r\n\r\n     \r\nlocalStorage.setItem(\"users\", JSON.stringify(users));\r\n      setUsers(users);\r\n    } else {\r\n      alert(\"Ошибка HTTP: \" + response.status);\r\n    }\r\n  };\r\n  const postUsertoFirebase = (userParam) => {\r\n    const db = firebase.database();\r\n\r\n    db.ref(\"users/\" + userParam.id_user).set(userParam);\r\n  };\r\n\r\n  const addUser = () => {\r\n    let newUser = {\r\n      id_user: Date.now() + 1,\r\n      time: new Date().toString().split(\"G\")[0],\r\n      user_name: valueUser.value,\r\n      completed: false,\r\n      tasks: [],\r\n      countTask: 0,\r\n    };\r\n    if (valueUser.value.length > 2) {\r\n      let users = [...stateUsers];\r\n      users.push(newUser);\r\n      localStorage.setItem(\"users\", JSON.stringify(users));\r\n      setUsers(users);\r\n      setValueUser({ value: \"\" });\r\n      postUsertoFirebase(newUser);\r\n    } else {\r\n    }\r\n\r\n    // users.push(newUser);\r\n    // localStorage.setItem(\"users\", JSON.stringify(users));\r\n    // setUsers(users);\r\n    // setValueUser({ value: \"\" });\r\n\r\n    // setValueUser({ value: \"\" });\r\n  };\r\n  const keyHandle = (e, id_user, count_task) => {\r\n    console.log(\"ddddddd\", e.keyCode);\r\n    if (e.keyCode === 13 && valueUser.value.length > 2) {\r\n      addUser();\r\n      if (id_user) {\r\n        addTodoTaskUser(id_user, count_task);\r\n      }\r\n    }\r\n  };\r\n  const editTask = (id_user, id_task) => {\r\n    console.log(id_user, id_task);\r\n    let users = [...stateUsers];\r\n    let user = { ...users[id_user] };\r\n    let userTasks = [...users[id_user].tasks];\r\n    console.log(userTasks);\r\n\r\n    let tasks = userTasks.map((item) => {\r\n      if (item.id_task === id_task) {\r\n        item.title = valueTodo.value;\r\n      }\r\n      return item;\r\n    });\r\n    userTasks = tasks;\r\n    user.tasks = userTasks;\r\n    users[id_user] = user;\r\n\r\n    setUsers({ ...users });\r\n    localStorage.setItem(\"users\", JSON.stringify({ ...users }));\r\n    setValueTodor({ value: \"\" });\r\n\r\n    // let todos = [...stateUsers.todos].map((user) => {\r\n    //   if (user.id_user === id_user) {\r\n    //     [...user.tasks].map((item) => {\r\n    //       if (item.id_task === id_task) {\r\n    //         item.title = stateUsers.value1;\r\n    //       }\r\n    //       return item;\r\n    //     });\r\n    //   }\r\n    //   return user;\r\n    // });\r\n\r\n    // setUsers({ todos, value: \"\", value1: \"\" });\r\n  };\r\n\r\n  const addTodoTaskUser = (id_user, count_task) => {\r\n    if (valueUser.value.length > 2) {\r\n      let users = [...stateUsers];\r\n      let user = users.find((user, i) => {\r\n        return user.id_user === id_user;\r\n      });\r\n      console.log(\"user===================\", user);\r\n      console.log(\"user===================\", users);\r\n      user.countTask = count_task + 1;\r\n      const userTasks = [...user.tasks];\r\n      const date = new Date();\r\n      userTasks.push({\r\n        id_task: new Date().getTime() + 1,\r\n        title: valueUser.value,\r\n        time_task: `${new Date().toLocaleDateString()} :${date.getHours()}:${date.getMinutes()}`,\r\n      });\r\n      user.tasks = userTasks;\r\n\r\n      setUsers(users);\r\n      localStorage.setItem(\"users\", JSON.stringify(users));\r\n      setValueUser({ value: \"\" });\r\n      postUsertoFirebase(user);\r\n    }\r\n  };\r\n\r\n  // const changeChecked = (e, i) => {\r\n  //   let todos = [...stateUsers.todos];\r\n  //   todos[i].completed = e.target.checked;\r\n\r\n  //   setUsers({ todos, value: stateUsers.value });\r\n  // };\r\n  const changeTitleUserTask = (value) => {\r\n    console.log(\"vlaue\", value);\r\n    //let arr = {...stateUsers;}\r\n    //  setUsers({ todos: arr,});\r\n    setValueUser({ value });\r\n  };\r\n  const preventDefault = (e) => {\r\n    console.log(e.target);\r\n    e.preventDefault();\r\n  };\r\n  const changeTitlebyModal = (value) => {\r\n    setValueTodor({ value });\r\n    // let users = {...stateUsers.todos};\r\n    // setUsers({ todos: arr, value: \"\", value1: e });\r\n  };\r\n  // const onShowUserTask = (id) => {\r\n  //   let todos = [...stateUsers.todos].map((user) => {\r\n  //     if (user.id === id) {\r\n  //       user.completed = !user.completed;\r\n  //     }\r\n  //     return user;\r\n  //   });\r\n\r\n  //   console.log(stateUsers);\r\n  //   setUsers({ todos, value: stateUsers.value });\r\n  // };\r\n  const deleteUser = (idUser) => {\r\n    let users = [...stateUsers];\r\n\r\n    users.splice(idUser, 1);\r\n    setUsers(users);\r\n  };\r\n  const deleteTask = (idUser, idTask, id) => {\r\n    console.log(id);\r\n    let users = [...stateUsers];\r\n    let user = users.find((user) => {\r\n      return user.id_user === idUser;\r\n    });\r\n    user.tasks.splice(id, 1);\r\n    // let userTasks = user.tasks.filter((task) => {\r\n    //   return task.id_task !== idTask;\r\n    // });\r\n\r\n    // user.tasks = userTasks;\r\n    users.push(user);\r\n    let arrUsers = users.filter((user, pos) => {\r\n      // console.log(users.indexOf(user), pos);\r\n      return users.indexOf(user) === pos;\r\n    });\r\n    console.log(users);\r\n    console.log(user);\r\n    // Object.assign(user, users);\r\n\r\n    // let tasks = userTasks.filter((task) => {\r\n    //   return task.id_task !== id_task;\r\n    // });\r\n    // user.tasks = tasks;\r\n    // users[id_user] = user;\r\n    setUsers(arrUsers);\r\n    localStorage.setItem(\"users\", JSON.stringify(arrUsers));\r\n    // setValueUser({ value: \"\" });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <MiniDrawer />\r\n      <Switch>\r\n        <Route exact path=\"/react_todo\" component={Home} />\r\n        <Route\r\n          exact\r\n          path=\"/users\"\r\n          render={() => (\r\n            <Users\r\n              addUser={addUser}\r\n              keyHandle={keyHandle}\r\n              changeTitle={changeTitleUserTask}\r\n              users={stateUsers}\r\n              value={valueUser.value}\r\n              deleteUser={deleteUser}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          path=\"/users/:id\"\r\n          render={(e) => (\r\n            <UserPersonalTasks\r\n              valueUser={valueUser.value}\r\n              valueTodo={valueTodo.value}\r\n              history={e}\r\n              users={stateUsers}\r\n              keyHandle={keyHandle}\r\n              addTodoTaskUser={addTodoTaskUser}\r\n              editTask={editTask}\r\n              changeTitleUserTask={changeTitleUserTask}\r\n              changeTitlebyModal={changeTitlebyModal}\r\n              deleteTask={deleteTask}\r\n            />\r\n          )}\r\n        />\r\n        <Route path=\"/about\" component={About}></Route>\r\n        <Redirect to=\"/react_todo\"></Redirect>\r\n        <Route\r\n          render={() => {\r\n            return <h1 style={{ color: \"red\" }}> 404 not found page...</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB-hPQZWluKy43wUjA7Zi6k5MpDR4ap7RY\",\r\n  authDomain: \"react-quize-46f17.firebaseapp.com\",\r\n  databaseURL: \"https://react-quize-46f17.firebaseio.com\",\r\n  projectId: \"react-quize-46f17\",\r\n  storageBucket: \"react-quize-46f17.appspot.com\",\r\n  messagingSenderId: \"822369206100\",\r\n  appId: \"1:822369206100:web:eb939cd61dc1e529cbd2c1\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}